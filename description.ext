//	DEBUG
//  allowFunctionsLog = 1;
//  allowFunctionsRecompile = 1;
enableDebugConsole[] = {"76561197972564938"};   //  TODO:   Add jmlane and deljay Player ID.

//	MISSION PARAMS
enableTeamSwitch = 1;			    //	Manual team switch disabled.
respawn = 3;					    //	Respawn at respawn_west (or similar) points.
respawnButton = 0;				    //	No respawn button.
respawnOnStart = 0;				    //	Dont respawn on start. Run respawn script on start.
disabledAI = 1;					    //	Disable AI.
disableChannels[] = {
    {0, false, false},
    {1, false, false},
    {2, false, false},
    {4, false, false}
};
forceRotorLibSimulation = 1;	    //	Force rotorLib library.
saving = 0;						    //	Disable saving.
skipLobby = 1;					    //	1 to bypass the role selection screen.
showHUD[] = {
	true,	// Scripted HUD (same as showHUD command)
	true,	// Vehicle + soldier info
	true,	// Vehicle radar [HIDDEN]
	true,	// Vehicle compass [HIDDEN]
	false,	// Tank direction indicator
	true,	// Commanding menu
	false,	// Group Bar
	true	// HUD Weapon Cursors
};
allowSubordinatesTakeWeapons = 1;
aiKills = 0;
debriefing = 0;

class cfgFunctions {
    class ASG {
        class ADEP {
            class bdInit {};			//	Initializes Base Deployment elements.
            class bdProcMenu {};		//	Creates the Base Deployment menu, serves it to players.
            class bdProcOrder {};		//	Processes Base Deployment orders, and deploys bases.
            class bdProcMark {};		//	Creates, deletes, hides, and reveals base markers.
            class bdProcMarkA {};		//	Changes the Alpha value of a marker. Used in fn_bdProcMark.
            class initACDEP {};			//	Check the ACDEP_DB and initiates the Campaign Deployment system.
            class procACDEPpos {};		//	Actives the ACDEP gui for the admin, who selects the deploy location.
            class setACDEPpos {};		//	Processes the position based on LAND or WATER.
            class procABDEPspecial {};	//	Catches special deployment types, like fighting positions and recon hides.
            class ABDEPprocFP {};		//	Processes fighting position deployment.
        };
        class AASW {
            class initAASW {};			//	Initialize the module.
            class initAASWlpServer {};	//	Location tracker ping (SERVER)
            class initAASWlpClient {};	//	Location tracker functionality (CLIENT)
            class procAASWcivSpawn {};	//	Civilian spawn
            class procAASWmilSpawn {};	//	Militia spawn
            class setAASWdata {};		//	Set data from the AASW location database.
            class getAASWdata {};		//	Get data from the AASW location database.
            class initAASWcivAction {};	//	Add the Talk Action to civilians.
        };
        class AGEN {
            class setPlayerState {};	//	Enables or Disables the player with a black screen.
            class initAPDH {};			//	Player Disconnect Handler.
            class remPlayerObj {};		//	Deletes empty player body.
            class advProgressBar {};	//	Generalized progress bar.
            class getASGrank {};		//	Get rank from the rank database.
            class procASGloc {};		//	process logout location in the rank database.
        };
        class ANAT {
            class initANAT {};			//	Nametags above player heads at close range.
        };
        class ACOM {
            class initACOM {};			//	Athena Combat Medical module core.
            class setACOMstate {};		//	Set medical state.
            class ACOMdoDrag {};		//	Drag a wounded player.
            class ACOMdoDrop {};		//	Drop a wounded player being dragged.
            class ACOMgetDrag {};		//	Be dragged by another player when wounded.
            class ACOMgetDrop {};		//	Be dropped by another player who is dragging.
        };
        class AEAR {
            class initAEAR {};			//	Earplugs, activated with "USERACTION1", or the END key.
        };
        class AIMOR {
            class mortarLogic {};		//	Firing and targeting logic for the AI mortar.
            class deployMortar {};		//	Deploys a mortar crew to a specified position. See header for details.
            class mortarDefineFaction {};	//	Defines the faction of a mortar.
            class mortarAbandon {};		//	Orders a mortar crew to abandon the mortar in certain situations.
            class mortarDestroyed {};	//	React to a destroyed mortar by eliminating loose scripts and loops.
        };
        class ADYN {
            class initADYN {};			//	Initiate Dynamic Groups.
        };
        class ALOC {
            class setASGequipment {};	//	Equip the target player with ASG standardized equipment.
            class setASGuniform {};		//	Reskin the uniform to the ASG combat uniform.
            class alocDialogInit {};	//	Initializes the contents of the ALOC_DIALOG menu.
            class alocFDR {};			//	Freight Delivery Request.
            class alocFDRProc {};		//	Process an FDR.
            class alocInit {};			//	Initialize the logistics control system.
            class alocPDR {};			//	Player Delivery Request.
            class alocProcUI {};		//	Process UI elements.
            class alocVDR {};			//	Vehicle Deliver Request.
        };
        class ARCS {
            class ARCSinitFunctions {};	//	Initializes all ARCS-related functions.
            class ARCSinit {};			//	Initializes channel data and menu.
        };
    };
	#include "includes\funcKK.inc"
	#include "includes\funcLAR.inc"
	// #include "includes\funcOUT.inc"
};

class cfgCommunicationMenu {
	//	ATHENA BASE DEPLOYMENT
	class bd_menu {
		text = "Deployment";
		submenu = "#USER:bd_subMenu";
		expression = "";
		cursor = "";
		enable = "1";
		removeAfterExpressionCall = 0;		
	};
	class ARCS_control {
		text = "Radio Control";
        submenu = "#USER:ARCS_channelMenu";
        expression = "";
        cursor = "";
        enable = "1";
        removeAfterExpressionCall = 0;
	};       
};

class cfgCompositions {
	#include "includes\compositions\compABDEP.inc"
	#include "includes\compositions\compACDEP.inc"
};

//	BIS DEFINES
// #include "\A3\ui_f\hpp\defineCommon.inc"
// #include "\A3\ui_f\hpp\defineCommonGrids.inc"
// #include "\A3\ui_f\hpp\defineCommonColors.inc"
// #include "\A3\ui_f\hpp\defineDIKCodes.inc"
// #include "\A3\ui_f\hpp\defineResIncl.inc"
// #include "\A3\ui_f\hpp\defineResInclDesign.inc"
// #include "\A3\ui_f\hpp\rscCommon.inc"

//	ASG UI DEFINES
#include "includes\ui\uiCommon.inc"
#include "includes\ui\ALOC\alocUI.inc"

//	SOUND
class cfgSounds {
    sounds[]={
        in1,out1,
        radionoise1_1,radionoise1_2,radionoise1_3,
        radionoise2_1,radionoise2_2,radionoise2_3,
        radionoise3_1,radionoise3_2,radionoise3_3,
        radionoise4_1,radionoise4_2,radionoise4_3,
        deadSignal
    };
    class in1 {
        name="in1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\in2a.ogg",db+1,1};
        titles[]={};
    };
    class out1 {
        name="out1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\out2a.ogg",db+1,1};
        titles[]={};
    };
    class radionoise1_1 {
        name="radionoise1_1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise1.ogg",db+10,1};
        titles[]={};
    };
    class radionoise1_2 {
        name="radionoise1_2";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise2.ogg",db+10,1};
        titles[]={};
    };
    class radionoise1_3 {
        name="radionoise1_3";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise3.ogg",db+10,1};
        titles[]={};
    };
    class radionoise2_1 {
        name="radionoise2_1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise1.ogg",db+20,1};
        titles[]={};
    };
    class radionoise2_2 {
        name="radionoise2_2";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise2.ogg",db+20,1};
        titles[]={};
    };
    class radionoise2_3 {
        name="radionoise2_3";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise3.ogg",db+20,1};
        titles[]={};
    };
    class radionoise3_1 {
        name="radionoise3_1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise1.ogg",db+30,1};
        titles[]={};
    };
    class radionoise3_2 {
        name="radionoise3_2";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise2.ogg",db+30,1};
        titles[]={};
    };
    class radionoise3_3 {
        name="radionoise3_3";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise3.ogg",db+30,1};
        titles[]={};
    };
    class radionoise4_1 {
        name="radionoise4_1";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise1.ogg",db+40,1};
        titles[]={};
    };
    class radionoise4_2 {
        name="radionoise4_2";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise2.ogg",db+40,1};
        titles[]={};
    };
    class radionoise4_3 {
        name="radionoise4_3";
        sound[]={"@A3\Dubbing_Radio_F\sfx\radionoise3.ogg",db+40,1};
        titles[]={};
    };
    class deadSignal {
        name="deadSignal";
        sound[]={"@A3\Dubbing_Radio_F\sfx\loop.ogg",db+1,1};
        titles[]={};
    };
};

class cfgVehicleTemplates {};
class cfgTaskTypes {};
class cfgUnitInsignia {};
